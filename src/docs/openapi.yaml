openapi: 3.0.0
info:
  title: Sports Event Analyzer API
  version: '1.0.0'
  description: |
    API for sports event analysis.
    
    Enables creating, managing, and viewing sports event analyses.
  contact:
    name: Support Team
    email: support@sports-event-analyzer.com

servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.sports-event-analyzer.com
    description: Production server

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Analysis:
      type: object
      required:
        - id
        - user_id
        - analysis_type_id
        - created_at
        - parameters
      properties:
        id:
          type: integer
          format: int64
          description: Unique analysis identifier
        user_id:
          type: string
          description: User identifier (from Supabase Auth)
        analysis_type_id:
          type: integer
          description: Analysis type identifier
        created_at:
          type: string
          format: date-time
          description: Analysis creation date and time
        parameters:
          type: object
          description: Analysis parameters in JSON format
          additionalProperties: true

    CreateAnalysisRequest:
      type: object
      required:
        - user_id
        - analysis_type_id
        - parameters
      properties:
        user_id:
          type: string
          description: User identifier (from Supabase Auth)
        analysis_type_id:
          type: integer
          description: Analysis type identifier
        parameters:
          type: object
          description: Analysis parameters in JSON format
          additionalProperties: true

    UpdateAnalysisRequest:
      type: object
      properties:
        analysis_type_id:
          type: integer
          description: Analysis type identifier (optional)
        parameters:
          type: object
          description: Analysis parameters in JSON format (optional)
          additionalProperties: true

    PaginatedAnalysesResponse:
      type: object
      required:
        - data
        - total
        - page
        - limit
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Analysis'
          description: List of analyses
        total:
          type: integer
          description: Total number of available analyses
        page:
          type: integer
          description: Current page number
        limit:
          type: integer
          description: Number of results per page

    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message
        details:
          type: object
          description: Error details (optional)
          additionalProperties: true

paths:
  /analysis:
    post:
      summary: Create a new analysis
      description: |
        Creates a new analysis for the specified user and analysis type.
        Requires JWT authentication.
      operationId: createAnalysis
      tags:
        - Analyses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnalysisRequest'
      responses:
        '201':
          description: Analysis created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Get list of analyses
      description: |
        Retrieves a list of analyses for the authenticated user.
        Results are paginated and can be filtered by analysis type.
        Requires JWT authentication.
      operationId: getAnalyses
      tags:
        - Analyses
      parameters:
        - name: page
          in: query
          description: Page number (default 1)
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of results per page (default 10, max 100)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: analysis_type_id
          in: query
          description: Filter by analysis type
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of analyses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnalysesResponse'
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /analysis/{id}:
    parameters:
      - name: id
        in: path
        description: Analysis identifier
        required: true
        schema:
          type: integer
          format: int64

    get:
      summary: Get analysis details
      description: |
        Retrieves detailed information about a single analysis.
        Requires JWT authentication.
        Users can only access their own analyses.
      operationId: getAnalysis
      tags:
        - Analyses
      responses:
        '200':
          description: Analysis details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '401':
          description: Unauthorized or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Analysis not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update analysis
      description: |
        Updates an existing analysis.
        Requires JWT authentication.
        Users can only update their own analyses.
        Can update analysis type and/or parameters.
      operationId: updateAnalysis
      tags:
        - Analyses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAnalysisRequest'
      responses:
        '200':
          description: Analysis updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysis'
        '400':
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Analysis not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Delete analysis
      description: |
        Deletes an existing analysis.
        Requires JWT authentication.
        Users can only delete their own analyses.
      operationId: deleteAnalysis
      tags:
        - Analyses
      responses:
        '204':
          description: Analysis deleted successfully
        '401':
          description: Unauthorized or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Analysis not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: User login
      description: |
        Authenticates a user with email and password.
        Returns a JWT token on successful login.
      operationId: login
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    description: JWT token for authentication
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/reset-password:
    post:
      summary: Request password reset
      description: |
        Sends a password reset link to the user's email.
        The link contains a token valid for 1 hour.
      operationId: resetPassword
      tags:
        - Auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
      responses:
        '200':
          description: Password reset email sent
        '400':
          description: Invalid email address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/new-password:
    post:
      summary: Set new password
      description: |
        Sets a new password using a valid reset token.
        The token must be included in the Authorization header.
      operationId: setNewPassword
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - confirmPassword
              properties:
                password:
                  type: string
                  format: password
                  description: New password
                confirmPassword:
                  type: string
                  format: password
                  description: Confirm new password
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Invalid password or passwords don't match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid or expired reset token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      summary: User logout
      description: |
        Invalidates the current JWT token.
        Requires a valid JWT token in the Authorization header.
      operationId: logout
      tags:
        - Auth
      responses:
        '200':
          description: Logged out successfully
        '401':
          description: Invalid or missing token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

tags:
  - name: Auth
    description: Authentication operations
  - name: Analyses
    description: Operations for managing analyses
