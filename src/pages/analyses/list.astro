---
import DashboardLayout from '../../layouts/DashboardLayout.astro';
import { Button } from '@/components/ui/button';
import { AnalysesTable } from '@/components/analyses/AnalysesTable';
// Pobieranie danych z bazy
const { user, supabase } = Astro.locals as {
  user?: any;
  supabase?: any;
};

let fetchError: string | null = null;
let analyses: Array<{ id: string; title: string; status: 'completed' | 'in_progress' | 'failed'; type: string; createdAt: string; }> = [];

if (supabase) {
  try {
    const { data, error } = await supabase
      .from('analysis')
      .select('id, event_id, type, status, created_at, content_json')
      .order('created_at', { ascending: false })
      .limit(100);
    if (error) throw error;
    analyses = (data ?? []).map((row: any) => {
      const rawStatus = String(row.status || '').toLowerCase();
      const status: 'completed' | 'in_progress' | 'failed' =
        rawStatus === 'completed' ? 'completed' : rawStatus === 'pending' ? 'in_progress' : 'failed';
      const summary = row?.content_json?.summary as string | undefined;
      const title = summary
        ? String(summary).split('\n')[0].slice(0, 120)
        : `Analysis for event ${row.event_id}`;
      return {
        id: String(row.id),
        title,
        status,
        type: String(row.type ?? 'ai'),
        createdAt: String(row.created_at),
      };
    });
  } catch (e: any) {
    fetchError = e?.message || String(e);
  }
} else {
  fetchError = 'Supabase client not available';
}
---

<DashboardLayout title="Analyses - Sports Event Analyzer">
  <div class="flex justify-between items-center mb-8">
    <div>
      <h3 class="text-lg font-medium">Analyses</h3>
      <p class="text-sm text-muted-foreground">
        View and manage your sports event analyses.
      </p>
    </div>
    <Button variant="default">
      <a href="/analyses/new">New Analysis</a>
    </Button>
  </div>

  <div class="space-y-4">
    <div class="flex items-center justify-between">
      <div class="flex gap-2">
        <Button variant="outline" size="sm">All</Button>
        <Button variant="ghost" size="sm">Completed</Button>
        <Button variant="ghost" size="sm">In Progress</Button>
        <Button variant="ghost" size="sm">Failed</Button>
      </div>
    </div>

    <AnalysesTable client:load analyses={analyses} />
  </div>
</DashboardLayout>
